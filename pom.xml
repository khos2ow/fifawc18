<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.khosrow</groupId>
	<artifactId>fifawc18</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>fifawc18</name>
	<description>FIFA World Cup 2018 Prediction Game</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<!-- POM-wide Properties -->
	<properties>
		<!-- Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Environment versions -->
		<java.version>1.8</java.version>
		<maven.version>3.0</maven.version>
		<main.basedir>${project.basedir}</main.basedir>

		<!-- Plugin versions -->
		<maven.clean.plugin.version>3.0.0</maven.clean.plugin.version>
		<maven.compiler.plugin.version>3.6.0</maven.compiler.plugin.version>
		<maven.dependency.plugin.version>3.0.1</maven.dependency.plugin.version>
		<maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
		<maven.eclipse.plugin.version>2.10</maven.eclipse.plugin.version>
		<maven.enforcer.plugin.version>1.4.1</maven.enforcer.plugin.version>
		<maven.git.commit.plugin.version>2.2.2</maven.git.commit.plugin.version>
		<maven.google.replacer.plugin.version>1.5.3</maven.google.replacer.plugin.version>
		<maven.gpg.plugin.version>1.6</maven.gpg.plugin.version>
		<maven.install.plugin.version>2.5.2</maven.install.plugin.version>
		<maven.release.plugin.version>2.5.3</maven.release.plugin.version>
		<maven.surefire.plugin.version>2.19.1</maven.surefire.plugin.version>
		<maven.war.plugin.version>3.0.0</maven.war.plugin.version>

		<codehaus.helper.plugin.version>1.7</codehaus.helper.plugin.version>
		<codehaus.versions.plugin.version>2.3</codehaus.versions.plugin.version>

		<!-- Extra Plugins versions -->
		<spotify.docker.plugin.version>0.4.10</spotify.docker.plugin.version>

		<!-- Profiles references -->
		<log.level />
		<profile.active />

		<!-- Spring Boot start class -->
		<start-class>io.khosrow.fifawc.Fifawc18Application</start-class>
	</properties>

	<!-- Dependencies -->
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth.boot</groupId>
			<artifactId>spring-security-oauth2-autoconfigure</artifactId>
			<version>2.0.0.RELEASE</version>
		</dependency>
        
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>1.1.0</version>
		</dependency>

<!-- 		<dependency> -->
<!-- 			<groupId>org.webjars</groupId> -->
<!-- 			<artifactId>js-cookie</artifactId> -->
<!-- 			<version>2.1.0</version> -->
<!-- 		</dependency> -->

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Base Build -->
	<build>
		<!-- Turn on filtering by default for application and bootstrap properties -->
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/application*.yml</include>
					<include>**/bootstrap.yml</include>
				</includes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>**/application*.yml</exclude>
					<exclude>**/bootstrap.yml</exclude>
				</excludes>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven.eclipse.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven.enforcer.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven.install.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${codehaus.versions.plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- Force Java 8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- Auto download Source and Javadocs in Eclipse -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<!-- Enforce minimum version of Java and Maven -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<rules>
						<requireMavenVersion>
							<message>You are running an older version of Maven. Hanelly
								requires at least Maven ${maven.version}</message>
							<version>[${maven.version}.0,)</version>
						</requireMavenVersion>
						<requireJavaVersion>
							<message>You are running an older version of Java. Hanelly
								requires at least JDK ${java.version}</message>
							<version>[${java.version}.0,)</version>
						</requireJavaVersion>
					</rules>
				</configuration>
			</plugin>

			<!-- Force alphabetical order of tests to have a reproducible build -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<runOrder>alphabetical</runOrder>
				</configuration>
			</plugin>

			<!-- Manage project POM version through CLI -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
			</plugin>

			<!-- Generate Git Info -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
			</plugin>

			<!-- Create Fat JAR of Spring Boot application -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- Profiles -->
	<profiles>
		<!-- Development (default) -->
		<profile>
			<id>development</id>

			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<properties>
				<log.level>DEBUG</log.level>
				<profile.active>dev</profile.active>
			</properties>

			<dependencies>
				<!-- DevTools -->
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<!-- Production -->
		<profile>
			<id>production</id>

			<properties>
				<!-- Docker image default information -->
				<docker.image.namespace>registry.gitlab.com</docker.image.namespace>
				<docker.image.path>khos2ow</docker.image.path>
				<docker.image.name>${project.artifactId}</docker.image.name>
				<docker.image.version>${project.version}</docker.image.version>

				<!-- Docker repository information -->
				<docker.repository.id>docker-registry</docker.repository.id>
				<docker.repository.url>https://registry.gitlab.com/</docker.repository.url>

				<!-- Profiles references -->
				<log.level>INFO</log.level>
				<profile.active>prod</profile.active>
			</properties>

			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.spotify</groupId>
							<artifactId>docker-maven-plugin</artifactId>
							<version>${spotify.docker.plugin.version}</version>
							<executions>
								<execution>
									<id>build-image</id>
									<phase>package</phase>
									<goals>
										<goal>build</goal>
									</goals>
								</execution>
							</executions>
							<configuration>
								<imageName>${docker.image.namespace}/${docker.image.path}/${docker.image.name}</imageName>
								<dockerDirectory>${project.basedir}/src/main/docker/</dockerDirectory>
								<serverId>${docker.repository.id}</serverId>
								<registryUrl>${docker.repository.url}</registryUrl>
								<useConfigFile>false</useConfigFile>
								<imageTags>
									<imageTag>latest</imageTag>
									<imageTag>${docker.image.version}</imageTag>
								</imageTags>
								<resources>
									<resource>
										<targetPath>/</targetPath>
										<directory>${project.build.directory}</directory>
										<include>${project.build.finalName}.jar</include>
									</resource>
								</resources>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>

				<plugins>
					<!-- Create Docker image -->
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
